<?php

namespace XLite\Model\Proxy\__CG__\XLite\Module\XC\ProductVariants\Model;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class ProductVariant extends \XLite\Module\XC\ProductVariants\Model\ProductVariant implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }

    /**
     * {@inheritDoc}
     * @param string $name
     */
    public function __get($name)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__get', array($name));

        return parent::__get($name);
    }

    /**
     * {@inheritDoc}
     * @param string $name
     * @param mixed  $value
     */
    public function __set($name, $value)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__set', array($name, $value));

        return parent::__set($name, $value);
    }

    /**
     * {@inheritDoc}
     * @param  string $name
     * @return boolean
     */
    public function __isset($name)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__isset', array($name));

        return parent::__isset($name);

    }

    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'product', 'price', 'defaultPrice', 'amount', 'defaultAmount', 'weight', 'defaultWeight', 'sku', 'defaultValue', 'image', 'attributeValueC', 'attributeValueS', 'orderItems');
        }

        return array('__isInitialized__', 'id', 'product', 'price', 'defaultPrice', 'amount', 'defaultAmount', 'weight', 'defaultWeight', 'sku', 'defaultValue', 'image', 'attributeValueC', 'attributeValueS', 'orderItems');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (ProductVariant $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getNetPriceBeforeSale()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNetPriceBeforeSale', array());

        return parent::getNetPriceBeforeSale();
    }

    /**
     * {@inheritDoc}
     */
    public function getDisplayPriceBeforeSale()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDisplayPriceBeforeSale', array());

        return parent::getDisplayPriceBeforeSale();
    }

    /**
     * {@inheritDoc}
     */
    public function getAttributeValue(\XLite\Model\Attribute $attribute)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttributeValue', array($attribute));

        return parent::getAttributeValue($attribute);
    }

    /**
     * {@inheritDoc}
     */
    public function getValues()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValues', array());

        return parent::getValues();
    }

    /**
     * {@inheritDoc}
     */
    public function changeAmount($delta)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'changeAmount', array($delta));

        return parent::changeAmount($delta);
    }

    /**
     * {@inheritDoc}
     */
    public function getValuesHash()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValuesHash', array());

        return parent::getValuesHash();
    }

    /**
     * {@inheritDoc}
     */
    public function getClearPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClearPrice', array());

        return parent::getClearPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function getClearWeight()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClearWeight', array());

        return parent::getClearWeight();
    }

    /**
     * {@inheritDoc}
     */
    public function getDisplaySku()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDisplaySku', array());

        return parent::getDisplaySku();
    }

    /**
     * {@inheritDoc}
     */
    public function getSku()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSku', array());

        return parent::getSku();
    }

    /**
     * {@inheritDoc}
     */
    public function setSku($sku)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSku', array($sku));

        return parent::setSku($sku);
    }

    /**
     * {@inheritDoc}
     */
    public function isOutOfStock()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isOutOfStock', array());

        return parent::isOutOfStock();
    }

    /**
     * {@inheritDoc}
     */
    public function getPublicAmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublicAmount', array());

        return parent::getPublicAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function getAvailableAmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAvailableAmount', array());

        return parent::getAvailableAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function cloneEntity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'cloneEntity', array());

        return parent::cloneEntity();
    }

    /**
     * {@inheritDoc}
     */
    public function getTaxable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaxable', array());

        return parent::getTaxable();
    }

    /**
     * {@inheritDoc}
     */
    public function isLowLimitReached()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isLowLimitReached', array());

        return parent::isLowLimitReached();
    }

    /**
     * {@inheritDoc}
     */
    public function proccessPostUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'proccessPostUpdate', array());

        return parent::proccessPostUpdate();
    }

    /**
     * {@inheritDoc}
     */
    public function getLockedAmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLockedAmount', array());

        return parent::getLockedAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrice($price)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrice', array($price));

        return parent::setPrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrice', array());

        return parent::getPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultPrice($defaultPrice)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultPrice', array($defaultPrice));

        return parent::setDefaultPrice($defaultPrice);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultPrice', array());

        return parent::getDefaultPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setAmount($amount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAmount', array($amount));

        return parent::setAmount($amount);
    }

    /**
     * {@inheritDoc}
     */
    public function getAmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAmount', array());

        return parent::getAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultAmount($defaultAmount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultAmount', array($defaultAmount));

        return parent::setDefaultAmount($defaultAmount);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultAmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultAmount', array());

        return parent::getDefaultAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function setWeight($weight)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWeight', array($weight));

        return parent::setWeight($weight);
    }

    /**
     * {@inheritDoc}
     */
    public function getWeight()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWeight', array());

        return parent::getWeight();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultWeight($defaultWeight)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultWeight', array($defaultWeight));

        return parent::setDefaultWeight($defaultWeight);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultWeight()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultWeight', array());

        return parent::getDefaultWeight();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultValue($defaultValue)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultValue', array($defaultValue));

        return parent::setDefaultValue($defaultValue);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultValue', array());

        return parent::getDefaultValue();
    }

    /**
     * {@inheritDoc}
     */
    public function setProduct(\XLite\Model\Product $product = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProduct', array($product));

        return parent::setProduct($product);
    }

    /**
     * {@inheritDoc}
     */
    public function getProduct()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProduct', array());

        return parent::getProduct();
    }

    /**
     * {@inheritDoc}
     */
    public function setImage(\XLite\Module\XC\ProductVariants\Model\Image\ProductVariant\Image $image = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImage', array($image));

        return parent::setImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function getImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage', array());

        return parent::getImage();
    }

    /**
     * {@inheritDoc}
     */
    public function addAttributeValueC(\XLite\Model\AttributeValue\AttributeValueCheckbox $attributeValueC)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAttributeValueC', array($attributeValueC));

        return parent::addAttributeValueC($attributeValueC);
    }

    /**
     * {@inheritDoc}
     */
    public function getAttributeValueC()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttributeValueC', array());

        return parent::getAttributeValueC();
    }

    /**
     * {@inheritDoc}
     */
    public function addAttributeValueS(\XLite\Model\AttributeValue\AttributeValueSelect $attributeValueS)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAttributeValueS', array($attributeValueS));

        return parent::addAttributeValueS($attributeValueS);
    }

    /**
     * {@inheritDoc}
     */
    public function getAttributeValueS()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttributeValueS', array());

        return parent::getAttributeValueS();
    }

    /**
     * {@inheritDoc}
     */
    public function addOrderItems(\XLite\Model\OrderItem $orderItems)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addOrderItems', array($orderItems));

        return parent::addOrderItems($orderItems);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderItems()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderItems', array());

        return parent::getOrderItems();
    }

    /**
     * {@inheritDoc}
     */
    public function getNetPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNetPrice', array());

        return parent::getNetPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function getDisplayPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDisplayPrice', array());

        return parent::getDisplayPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function map(array $data)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'map', array($data));

        return parent::map($data);
    }

    /**
     * {@inheritDoc}
     */
    public function __unset($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__unset', array($name));

        return parent::__unset($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getRepository()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRepository', array());

        return parent::getRepository();
    }

    /**
     * {@inheritDoc}
     */
    public function checkCache()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'checkCache', array());

        return parent::checkCache();
    }

    /**
     * {@inheritDoc}
     */
    public function detach()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'detach', array());

        return parent::detach();
    }

    /**
     * {@inheritDoc}
     */
    public function __call($method, array $args = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__call', array($method, $args));

        return parent::__call($method, $args);
    }

    /**
     * {@inheritDoc}
     */
    public function setterProperty($property, $value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setterProperty', array($property, $value));

        return parent::setterProperty($property, $value);
    }

    /**
     * {@inheritDoc}
     */
    public function getterProperty($property)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getterProperty', array($property));

        return parent::getterProperty($property);
    }

    /**
     * {@inheritDoc}
     */
    public function isPersistent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPersistent', array());

        return parent::isPersistent();
    }

    /**
     * {@inheritDoc}
     */
    public function isDetached()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isDetached', array());

        return parent::isDetached();
    }

    /**
     * {@inheritDoc}
     */
    public function getUniqueIdentifierName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUniqueIdentifierName', array());

        return parent::getUniqueIdentifierName();
    }

    /**
     * {@inheritDoc}
     */
    public function getUniqueIdentifier()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUniqueIdentifier', array());

        return parent::getUniqueIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    public function update()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'update', array());

        return parent::update();
    }

    /**
     * {@inheritDoc}
     */
    public function create()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'create', array());

        return parent::create();
    }

    /**
     * {@inheritDoc}
     */
    public function delete()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'delete', array());

        return parent::delete();
    }

    /**
     * {@inheritDoc}
     */
    public function processFiles($field, array $data)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'processFiles', array($field, $data));

        return parent::processFiles($field, $data);
    }

    /**
     * {@inheritDoc}
     */
    public function getFieldsDefinition($class = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFieldsDefinition', array($class));

        return parent::getFieldsDefinition($class);
    }

    /**
     * {@inheritDoc}
     */
    public function prepareEntityBeforeCommit($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'prepareEntityBeforeCommit', array($type));

        return parent::prepareEntityBeforeCommit($type);
    }

}
